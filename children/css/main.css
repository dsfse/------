@import url(default.css);
@import url(common.css);

.visual h2 {
    position: absolute;
    left: 50%;
    top: 50%;
    z-index: 12;
    font-size: 50px;
    font-weight: 700;
    line-height: 1.4;
    color: #fff;
    transform: translate(-50%, -50%);
    /* fullpage.js 플러그인에서 한 section에 글자 딱 하나만 존재할 때
       해당 글자에 line-height가 들어가면 해당 section에서는 scroll이
       작동되지 않을 수 있음 */
    text-align: center;
}
.visual video {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    z-index: 10;
    width: 100%;
    height: 100%;
    object-fit: cover;
}
.visual .bg {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    /* top, bottopm, left, right를 모두 0으로 주면 width:100%와 동일하게 적용됨 */
    z-index: 11;
    background-color: rgba(0,0,0,0.2);
}
@media screen and (max-width:1220px){
    .visual h2 {
        font-size: 40px;
    }
}
@media screen and (max-width:980px){
    .visual h2 {
        font-size: 35px;
    }
}
@media screen and (max-width:860px){
    .visual h2 {
        font-size: 30px;
    }
}
@media screen and (max-width:760px){
    .visual h2 {
        font-size: 25px;
    }
}
@media screen and (max-width:640px){
    .fp-responsive .fp-is-overflow.fp-section {
        min-height: auto !important;
        /*
           fullpage.js에서 640이하일때는 fullpage 적용하지 않도록 함 
           근데 이때 min-height가 해제가 않되서 이전 fullpage 높이가 잡힘
           그래서 min-height:auto;를 줘야하는 상황
           visual에 min-heighy:auto; 적용되지 않음 (css 적용 우선순위)
           이때 절대 내가 적용하는 값을 먼저 적용하게 하는게
           min-height: auto !important; 

           이렇게 플러그인을 써서 내가 주지 않을 스타일을 고쳐서 쓸때 !important;
        */
    }
    /* 만약 fullpage를 모바일에서 해제하고 높이를 제한 해야 한다면 
       section 클래스를 준 요소 말고 그 안에 있는 요소한테 높이를 줘야함. */
    .visual .inner {
        height: 400px;
    }
    .visual h2 {
        font-size: 20px;
    }
}

.count {
    background-color: #DA281F;
    color: #fff;
}
.count .tit {
    margin: 0 0 0 120px;
}
.count .tit h2 {
    margin: 0 0 30px 0;
    font-size: 30px;
}
.count .tit h2 strong {
    font-weight: 700;
}
.count .tit p {
    font-size: 20px;
}
.count .tit p span {
    display: block;
}
.count .rate {
    position: absolute;
    left: calc(50% + 194px);
    top: 10%;
    transform: translate(0, 50%);
}
.count .rate ul li {
    margin: 0 0 50px 0;
}
.count .rate ul li:last-child {
    margin-bottom: 0;
}
.count .rate ul li .exp {
    margin-bottom: 10px;
}
.count .rate ul li .num strong {
    font-size: 50px;
    font-weight: 700;
    line-height: 1.2;
}
.count .rate ul li .num span {
    position: relative;
    margin: 0 0 0 10px;
    font-size: 20px;
    font-weight: 700;
}
.count .rate ul li .num span::after {
    position: absolute;
    left: 105%;
    top: 24px;
    width: 1000000%;
    height: 1px;
    background-color: #ccc;
    content: "";
}
@media screen and (max-width:640px){
    .count {
        padding: 40px 0 30px 0;
    }
    .count .tit {
        margin: 0;
    }
    .count .tit h2 {
        margin: 0 0 22px 0;
        font-size: 20px;
    }
    .count .tit p {
        margin: 0 0 20px 0;
        font-size: 13px;
    }
    .count .tit p span {
        display: inline;
    }
    .count .rate {
        position: relative;
        left: auto;
        top: auto;
        width: auto;
        transform: translate(0,0%);
    }
    .count .rate ul li {
        margin: 0 0 23px 0;
    }
    .count .rate ul li .num strong {
        font-size: 30px;
    }
    .count .rate ul li .num span {
        margin: 0 0 0 5px;
        font-size: 13px;
    }
    .count .rate ul li .num span::after {
        left: 105%;
        top: 16px;
        width: 1000000%;
    }
}

.biz {
    background-color: #F5E9DD;
}

.news {
    background-color: #DA281F;
}

.support {
    background-color: #F5E9DD;
}

.footer {

}

/* 오른쪽 네비게이션 디자인 변경 
   선택자가 #fp-nav ul li 인 것과 body #fp-nav ul li 인 것이 동시에 존재한다면 
   body 부터 선언한 요소가 먼저 적용됨.(단, 나머지 선택자는 동일)*/
body #fp-nav ul li {
    width: 12px;
    height: 12px;
    margin: 10px;
}
body #fp-nav ul li:last-child { /* footer 삭제 */
    display: none;
}
body #fp-nav ul li a span,
body #fp-nav ul li:hover a span {
    height: 10px;
    width: 10px;
    border: 1px solid #2d2d2d;
    background: #fff;
    left: 10px;
    top: 10px;
    margin: 0;
}
body #fp-nav ul li a.active span,
body #fp-nav ul li:hover a.active span  {
    width: 100%;
    height: 100%;
    margin: 0;
    background: #2d2d2d;
}
body #fp-nav ul li .fp-tooltip {
    overflow: visible;
    top: 5px;
    width: auto;
    padding: 0 17px;
    background-color: #2d2d2d;
    color: #fff;
    border-radius: 3px;
    max-width: max-content;
    font-size: 15px;
    font-family: 'Noto Sans KR', 'NanumGothic', 'Malgun Gothic', 'Apple SD Gothic', 'Apple SD Gothic Neo', 'Dotum', sans-serif;    
}
body #fp-nav ul li .fp-tooltip::after {
    position: absolute;
    right: -4px;
    top: 7px;
    width: 8px;
    height: 8px;
    background-color: #2d2d2d;
    transform: rotate(45deg);
    content: "";
}

/* 어두운 툴팁 */
body #fp-nav.black ul li a span,
body #fp-nav.black ul li:hover a span {
    background: #fff;
}
body #fp-nav.black ul li a.active span,
body #fp-nav.black ul li:hover a.active span  {
    background: #DA281F;
}
body #fp-nav.black ul li .fp-tooltip {
    background-color: #DA281F;
}
body #fp-nav.black ul li .fp-tooltip::after {
    background-color: #DA281F;
}

.fp-watermark { /* fullpage copyright 삭제 */
    display: none;
}